"""Primary Key and ForeignKey

Revision ID: 71a21ad5ca27
Revises: b1c8ca7029a6
Create Date: 2024-04-26 20:55:10.287003

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '71a21ad5ca27'
down_revision = 'b1c8ca7029a6'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # To drop the classdistribution foreign key we need to copy the data from the old classdistribution table to the new table
    op.create_table(
        'classdistribution_temp',
        sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
        sa.Column('campus', sa.VARCHAR(8), nullable=True),
        sa.Column('dept_abbr', sa.VARCHAR(4), nullable=True),
        sa.Column('course_num', sa.VARCHAR(8), nullable=True),
        sa.Column('class_name', sa.VARCHAR(10), nullable=False),
        sa.Column('class_desc', sa.VARCHAR(255), nullable=False),
        sa.Column('total_students', sa.Integer(), nullable=False),
        sa.Column('total_grades', sa.JSON(), nullable=False),
        sa.Column('onestop', sa.VARCHAR(512), nullable=True),
        sa.Column('onestop_desc', sa.VARCHAR(2048), nullable=True),
        sa.Column('cred_min', sa.SmallInteger(), nullable=True),
        sa.Column('cred_max', sa.SmallInteger(), nullable=True),
        sa.Column('srt_vals', sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['campus','dept_abbr'], ['departmentdistribution.campus','departmentdistribution.dept_abbr']),
    )
    # Insert everything but department_id 
    op.execute('INSERT INTO classdistribution_temp (campus,dept_abbr,course_num,class_name,class_desc,total_students,total_grades,onestop,onestop_desc,cred_min,cred_max,srt_vals) SELECT campus,dept_abbr,course_num,class_name,class_desc,total_students,total_grades,onestop,onestop_desc,cred_min,cred_max,srt_vals FROM classdistribution')
    op.drop_table('classdistribution')
    op.rename_table('classdistribution_temp', 'classdistribution')

    # We need to do the same for the departmentdistribution table, removing the id primary key and using campus and dept_abbr as the primary key
    op.create_table(
        'departmentdistribution_temp',
        sa.Column('campus', sa.VARCHAR(8), nullable=True),
        sa.Column('dept_abbr', sa.VARCHAR(4), nullable=False),
        sa.Column('dept_name', sa.VARCHAR(255), nullable=False),
        sa.PrimaryKeyConstraint('campus','dept_abbr')
    )
    # Insert everything but id
    op.execute('INSERT INTO departmentdistribution_temp (campus,dept_abbr,dept_name) SELECT campus,dept_abbr,dept_name FROM departmentdistribution')
    op.drop_table('departmentdistribution')
    op.rename_table('departmentdistribution_temp', 'departmentdistribution')



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('departmentdistribution', sa.Column('id', sa.INTEGER(), nullable=False))
    op.add_column('classdistribution', sa.Column('department_id', sa.INTEGER(), nullable=True))
    op.drop_constraint(None, 'classdistribution', type_='foreignkey')
    op.create_foreign_key(None, 'classdistribution', 'departmentdistribution', ['department_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
